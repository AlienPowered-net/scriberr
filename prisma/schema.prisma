generator client {
  provider      = "prisma-client-js"
  // Vercel sometimes runs on rhel-based images.
  binaryTargets = ["debian-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // pooled URL
  directUrl = env("DIRECT_URL")   // non-pooled URL (for migrations)
}

model Shop {
  id        String   @id @default(cuid())
  domain    String   @unique           // e.g. dev-alienpowered.myshopify.com
  folders   Folder[]
  notes     Note[]
  createdAt DateTime @default(now())
}

model Folder {
  id        String   @id @default(cuid())
  shopId    String
  name      String
  notes     Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shop      Shop     @relation(fields: [shopId], references: [id])
  @@index([shopId, name])
}

model Note {
  id        String   @id @default(cuid())
  shopId    String
  folderId  String
  title     String
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shop      Shop     @relation(fields: [shopId], references: [id])
  folder    Folder   @relation(fields: [folderId], references: [id])
  @@index([shopId, folderId, updatedAt])
}

model Session {
  id               String   @id                      // Shopify session id
  shop             String                              // shop domain
  state            String                              // OAuth state
  isOnline         Boolean                             // online/offline
  scope            String?                             // granted scopes
  expires          DateTime?                           // expiry for online sessions
  accessToken      String?                             // offline token (if offline)
  onlineAccessInfo Json?                               // raw online token payloads

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([shop])
}
